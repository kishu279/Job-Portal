// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  applicant 
  hr
}

model User {
  userId          Int         @id @default(autoincrement())
  name            String 
  email           String      @unique
  password        String 
  validProof      String      
  contactInfo     String
  role            Role        @default(applicant)

  profile         Profile?
  jobs            Jobs[]      @relation("HRJobs")
  application     Application[]
}

model Profile {
  profileId     Int         @id @default(autoincrement())
  hired         Boolean     @default(false)
  company       String?      
  tech          String[]
  experience    Int 
  lastCompany   String[]
  interest      String[]
  bio           String
  achievements  String[]
  updatedAt     DateTime    @updatedAt

  userId        Int?        @unique
  user          User?       @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

model Jobs {
  jobId         Int         @id @default(autoincrement())
  companyName   String 
  requirement   String?
  tech          String[]
  salary        Float
  location      String?
  workingHours  Int?
  postedAt      DateTime    @default(now())
  description   String

  hrId          Int?         
  user          User?       @relation(fields: [hrId], references: [userId], name: "HRJobs", onDelete: Cascade)


  applicationId Int[]
  applications  Application[] 
}


model Application {
  applicationId Int         @id @default(autoincrement())
  userId        Int         
  jobId         Int         
  appliedAt     DateTime    @updatedAt

  user          User        @relation(fields: [userId], references: [userId], onDelete: Cascade)
  Jobs          Jobs        @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}